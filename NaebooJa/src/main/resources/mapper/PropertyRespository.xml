<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lec.spring.repository.PropertyRepository">
    <!-- 반복해서 사용될 쿼리문은 sql 태그로 정의 include 태그로 가져다 쓸수 있다 -->
    <sql id="SELECT_BASE">
        SELECT
            p.id "p_id",
            p.group "p_group",
            p.name "p_name",
            p.rest_money "p_rest_money",
            u.id "u_id",
            u.username "u_username",
            u.name "u_name",
            u.regdate "u_regdate"
        FROM
            `property` p, user u
        WHERE
            p.user_id = u.id
    </sql>

    <!-- JOIN 문에서 여러 테이블의 데이터 매핑 받기 -->
    <!-- User 매핑 -->
    <resultMap id="mapUser" type="com.lec.spring.domain.User">
        <result column="u_id" property="id"/>   <!--User.java-->
        <result column="u_username" property="username"/>
        <result column="u_password" property="password"/>
        <result column="u_name" property="name"/>
        <result column="u_regdate" property="regDate"/>
    </resultMap>

    <!-- Property 매핑 -->
    <resultMap id="mapProperty" type="com.lec.spring.domain.Property"> <!--Property 객체로 매핑-->
        <result column="p_id" property="id"/> <!--p_id 값을 id 에 꽂아넣음(Property.java)-->
        <result column="p_group" property="group"/>
        <result column="p_name" property="name"/>
        <result column="p_rest_money" property="rest_money"/>
        <collection property="user" resultMap="mapUser"/><!--User 객체에 대해서는 mapUser 로 이향-->
    </resultMap>

    <!--특정 ID의 하나의 자산을 찾는데 결과는 mapProperty⬇️ 가 책임진다-->
    <select id="findById" resultMap="mapProperty">
        <include refid="SELECT_BASE"/>
            AND p.id = #{id}
        ORDER BY p.id DESC
    </select>

    <!--특정 ID의 전체 자산을 찾는데 결과는 mapProperty⬇️ 가 책임진다-->
    <select id="findAll" resultMap="mapProperty">
        <include refid="SELECT_BASE"/>
            AND u.id = #{id}
        ORDER BY p.id ASC
    </select>

</mapper>